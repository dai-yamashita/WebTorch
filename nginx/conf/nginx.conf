
events {
    worker_connections  1024;
}

http {

    # set search paths for pure Lua external libraries (';;' is the default path):
    lua_package_path ";;/opt/nginx/lib/?.lbjc;";
    lua_shared_dict global 10m;
    init_by_lua_file lib/init.lbjc;

    server {
        access_log     /dev/stdout combined;
        error_log      /dev/stderr debug;

        # Print LuaJIT version (not compatible with pure Lua)
        location = /lua {
            default_type text/plain;
            content_by_lua '
                if jit then
                    ngx.say(jit.version)
                else
                     ngx.say("Not LuaJIT!")
                end
            ';
        }

        # Issues a synchronous but still non-blocking Nginx Subrequest
        location /train {
            content_by_lua '
            res = ngx.location.capture (
                    "/impl/train", {method = ngx.HTTP_POST, always_forward_body = true, copy_all_vars = true})
            ngx.status = res.status
            ngx.say(res.body)
            ngx.exit(res.status)
        ';
        }

        # Issues a synchronous but still non-blocking Nginx Subrequest
        location /output {
            content_by_lua '
            res = ngx.location.capture (
                    "/impl/output", {method = ngx.HTTP_POST, always_forward_body = true, copy_all_vars = true})
            ngx.status = res.status
            ngx.say(res.body)
            ngx.exit(res.status)
        ';
        }

        # Blocking endpoint
        location = /impl/train {
		    content_by_lua_file lib/train.lbjc;
	    }

        # Blocking endpoint
        location = /impl/output {
            content_by_lua_file lib/output.lbjc;
        }
    }
}
